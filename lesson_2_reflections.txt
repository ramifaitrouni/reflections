What happens when you initialize a repository? Why do you need to do it?

Git creates a hidden directory inside it called .git which will contain 
the data for git commits etc. I need it done oresle the directory won't 
be considered a git repository.

 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is intermediary between the working directory and the repository.
It gives the chance to choose the files we want to work on and include when I commit.



How can you use the staging area to make sure you have one commit per logical
change?

I use git diff to check changes then I add 1 logical change to the staging area.
By using the command 'git diff --staged' after each git add, I can compare the 
staging area and the repository. It is a double check.
If I have 1 logical change that I'd like to keep, then it is time to commit.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When I want to implemenet different versions of my code



How do the diagrams help you visualize the branch structure?

Diagrams shows where the branch splits and where they merge.
I mean this is the function of a diagram , to help visualize 
so I don't really unserstand the quesion.



What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It gives a new commmit containing the changes done in both branches
all the way. It is represented as the point of meeting of the 2 independant branches.



What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Pro: easy and fast
cons: may lead to unwanted results in some cases.